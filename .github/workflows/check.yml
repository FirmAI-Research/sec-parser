name: CI/CD Checks

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Cache Poetry dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-
          ${{ runner.os }}-poetry-
          ${{ runner.os }}-

    - name: Install dependencies
      run: poetry install

    - name: Install Task
      uses: arduino/setup-task@v1
      with:
        version: 3.x`
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Run task "ci-cd-checks" from Taskfile.yml
      run: poetry run task ci-cd-checks

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
